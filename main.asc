load("global/secure.asc");
load("global/code.asc");
load("global/log.asc");
//所有客户端
var clients = application.clients;
//正在直播的流
var streams = [];
//定义server的命名空间
Client.prototype.app = {};
/**
 * 拓展创建直播流的原型
 * @param {Object} stream 流名
 * @param {Object} res 播放对应资源
 */
Client.prototype.app.createStream = function(stream, res) {
	var returnData = {};
	var streamName;
	var resName;
	if(res.format == "mp4") {
		streamName = "mp4:" + stream.name + ".mp4";
		resName = "mp4:" + res.src + ".mp4";
	}else if(res.format == "flv"){
		streamName = stream.name;
		resName = res.src;
	}else{
		returnData.b = 0;
		returnData.i = error_format;
		returnData.msg = "error_format";
		return returnData;
	}
	var s = Stream.get(streamName);
	if(s){
		s.play(resName);		
	}
	s.onStatus = function(info){
		logger.log(info.code + " | " + info.description);
	}
	streams.push(s);
	returnData.b = 1;
	return returnData;
};

application.onAppStart = function() {
	logger.log("当前版本为 : " + version);
	setInterval(function() {
		logger.log("当前连接数为 : " + clients.length);
	}, 10000);
}

application.onAppStop = function() {
	logger.log("App stopped.");
}

application.onConnect = function(client) {
	logger.log("ip : " + client.ip);
	return true;
}

application.onPublish = function(client, stream) {
	logger.log("name : " + stream.name);
}